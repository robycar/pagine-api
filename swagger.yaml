openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/robycar/pagine/1.0.0
  - description: Server locale
    url: http://localhost:9081/
info:
  description: API per i servizi dedicati per la libreria
  version: "1.0.0"
  title: Pagine API
  contact:
    email: roby@libreriapagine.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: distributore
    description: CRUD per i distributori
paths:
  /api/distributore:
    get:
      tags: 
        - distributore
      summary: Recupera tutti i distributori
      operationId: findAllDistributore
      description: Recupera tutti i distributori presenti nel sistema, eventualmente utilizzando la paginazione
      parameters: 
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: elenco distributori
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Page'
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Distributore'
        '400':
          description: invalid input, object invalid
    post:
      tags:
        - distributore
      summary: Aggiunge un distributore nel sistema
      operationId: addDistributore
      description: Aggiunge un nuovo distributore nel sistema
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distributore'
        '400':
          description: invalid input, object invalid
        '404':
          description: uno o più riferimenti non sono presenti nel sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '409':
          description: Un editore con lo stesso nome esistente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributoreNoId'
        description: Inventory item to add
  '/api/distributore/{id}':
    get:
      tags: 
        - distributore
      summary: Cerca per identificatore
      operationId: findById
      description: |
        Recupera i dati di un distributore  a partire dal suo identificatore
      parameters:
        - in: path
          name: id
          description: L'identificatore del distributore
          required: true
          schema:
            type: string
      responses:
        '200':
          description: I dati del distributore
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Distributore'
        '400':
          description: bad input parameter
        '404':
          description: distributore non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    put:
      tags:
        - distributore
      summary: Modifica un distributore
      operationId: editDistributore
      description: Modifica un distributore presente nel sistema
      parameters: 
        - in: path
          name: id
          description: L'identificatore del distributore
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: I dati del distributore modificato
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributoreNoId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distributore'
        '400':
          description: bad input parameter
        '404':
          description: distributore, o uno dei suoi riferimenti, non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '409':
          description: In caso di modifica del nome, un distributore con lo stesso nome esistente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
    delete:
      tags: 
        - distributore
      summary: Elimina un distributore
      operationId: deleteDistributore
      description: Elimina un distributore presente nel sistema
      parameters:
        - in: path
          name: id
          description: L'identificatore del distributore
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '404':
          description: Distributore non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '400':
          description: input non valido, o distributore non eliminabile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

components:
  parameters:
    pageNumberParam:
      in: query
      name: page
      required: false
      schema:
        type: integer
        nullable: false
        minimum: 0
      description: Numero di pagina nella paginazione 
    pageSizeParam:
      in: query
      name: size
      required: false
      schema:
        type: integer
        nullable: false
        minimum: 1
        maximum: 50
      description: Numero di record per pagina
  schemas:
    Recapito:
      type: object
      description: Dati relativi ad un recapito. Puo' essere un telefono, una email, etc.
      required: 
        - tipo
        - contatto
      properties:
        tipo:
          type: string
          description: >
            Tipologia del recapito. Determina il tipo di valore del campo recapito.
            Alcuni valori sono standard com ad esempio:
            * `tel` - Recapito telefonico
            * `fax` - Numero di fax
            * `email` - Indirizzo email
            * `web` - URL/indirizzo web
          example: tel
        contatto:
          type: string
          description: Valore del contatto. Determinato dal campo tipo
          example: 0693847563
        etichette:
          type: array
          items:
            type: string
          description: 
            lista di stringhe a discrezione dell'utente per affinare la ricerca
          example: ['ordini', 'rappresentante']
        riferimento:
          type: string
          description: Specifica la natura del contatto. Ad esempio puo' indidicare a chi appartiente il numero di telefono o l'email
          example: Servizio clienti
    DistributoreNoId:
      type: object
      properties:
        nome:
          description: Nome del distributore. Deve essere univoco.
          type: string
          example: Lazio distributozione
        indirizzo:
          $ref: '#/components/schemas/Indirizzo'
        web:
          type: string
          description: Indirizzo web
          example: https://www.mondadori.it
        recapiti:
          type: array
          items:
            $ref: '#/components/schemas/Recapito'
        editori:
          type: array
          items:
            $ref: '#/components/schemas/Editore'
    Distributore:
      type: object
      properties:
        id:
          type: string
          format: uuid
      allOf:
        - $ref: '#/components/schemas/DistributoreNoId'
    Editore:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          description: Nome dell'editore. Deve essere univoco.
          type: string
          maxLength: 40
          example: Mondadori
        indirizzo:
          description: Indirizzo dell'editore
          type: string
          maxLength: 80
          example: Via Roma, 53
        cap:
          description: Codice avviamo postale dell'indirizzo del distributore
          type: string
          maxLength: 5
          example: 00123
        citta:
          description: Città dell'indirizzo del distributore.
          type: string
          maxLength: 40
          example: Roma
        tel1:
          type: string
          description: Recapito telefonico primario
          maxLength: 13
          example: "0636455273"
        tel2:
          type: string
          description: Recapito telefonico secondario
          maxLength: 13
          example: "0636455222"
        fax1:
          type: string
          description: FAX primario
          maxLength: 13
          example: 0636455273
        fax2:
          type: string
          description: FAX alternativo
          maxLength: 13
          example: 0636455222
        email1:
          type: string
          description: Email principale
          maxLength: 80
          example: ordini@laziodistribuzione.it
        email2:
          type: string
          description: Email alternativa
          maxLength: 80
        url:
          type: string
          description: Indirizzo web
          maxLength: 80
          example: https://www.laziodistribuzione.it
    Indirizzo:
      type: object
      properties:
        citta:
          type: string
          example: Roma
        cap:
          type: string
          maxLength: 5
          minLength: 5
          example: 00123
        indirizzo:
          type: string
          example: Via Flaminia, 128
    ErrorDTO:
      type: object
      description: Errore applicativo
      properties:
        code:
          type: string
          description: Codice dell'errore
          example: PAG-0001
        message:
          type: string
          description: Messaggio di errore
          example: Operazione non ammessa
    Page:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
          description: the page content as list
        number:
          type: integer
          format: int32
          description: the number of the current page
        numberOfElements:
          type: integer
          format: int32
          description: the number of elements currently on this page
        size:
          type: integer
          format: int32
          description: the size of the page
        totalPages:
          type: integer
          format: int32
          description: the number of total pages
        totalElements:
          type: integer
          format: int64
          description: the total amount of elements
        first:
          type: boolean
          description: whether the current page is the first one
        last:
          type: boolean
          description: if there is a next page

      description: A page is a sublist of a list of objects. It allows gain information about the position of it in the containingentire list
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
security: 
  - jwt: []